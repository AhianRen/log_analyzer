<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nt.log_analyzer.dao.LogModelDao">
	<!-- <resultMap id="resultMap" type="com.nt.log_analyzer.model.LogModel"> 
		<id property="id" column="id"/> <result property="fileId" column="fileId"/> 
		<result property="rowNumber" column="rowNumber"/> <result property="timeStamp" 
		column="timeStamp" javaType="java.util.Date" jdbcType="TIMESTAMP"/> <result 
		property="milliSecond" column="milliSecond"/> <result property="proceedingId" 
		column="proceedingId"/> <result property="threadName" column="threadName"/> 
		<result property="priority" column="priority"/> <result property="executeTime" 
		column="executeTime"/> <result property="className" column="className"/> 
		<result property="message" column="message"/> </resultMap> -->

	<sql id="tableName">log</sql>
	<sql id="insertField">fileName,rowNumber,timeStamp,milliSecond,proceedingId,threadName,priority,executeTime,className,message,fileId</sql>


	<!-- oracle的insert语句 -->
	<!-- <insert id="insertLogModel" parameterType="logModel"> <selectKey keyProperty="logModelID" 
		order="BEFORE" resultType="long"> select SEQ_LOGMODEL.nextval from dual </selectKey> 
		insert into logmodel(<include refid="insertField"/>) values(#{logModelID,jdbcType=BIGINT},#{rowNumber,jdbcType=BIGINT},#{dateStamp,jdbcType=DATE},#{milliSecond,jdbcType=BIGINT},#{ProceedingID,jdbcType=INTEGER},#{threadName,jdbcType=VARCHAR},#{priority,jdbcType=VARCHAR},#{executeTime,jdbcType=BIGINT},#{className,jdbcType=VARCHAR},#{message,jdbcType=VARCHAR}) 
		</insert> -->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
		insert into <include refid="tableName" /> (<include refid="insertField"/>)
		values
		<foreach collection="list" item="logModel" separator="," >
		(
			#{logModel.fileName},
			#{logModel.rowNumber},
			#{logModel.timeStamp},
			#{logModel.milliSecond},
			#{logModel.proceedingID},
			#{logModel.threadName},
			#{logModel.priority},
			#{logModel.executeTime},
			#{logModel.className},
			#{logModel.message},
			#{logModel.fileId}
		)
		</foreach>
		
	</insert>
	
	
	
	<!-- <insert id="insertLogModel" parameterType="logModel"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		<include refid="tableName" />
		(
		<trim suffixOverrides=",">
			<if test="fileName!=null">
				fileName,
			</if>
			<if test="rowNumber!=null">
				rowNumber,
			</if>
			<if test="timeStamp!=null">
				timeStamp,
			</if>
			<if test="milliSecond!=null">
				milliSecond,
			</if>
			<if test="proceedingID!=null">
				proceedingID,
			</if>
			<if test="threadName!=null">
				threadName,
			</if>
			<if test="priority!=null">
				priority,
			</if>
			<if test="executeTime!=null">
				executeTime,
			</if>
			<if test="className!=null">
				className,
			</if>
			<if test="message!=null">
				message
			</if>
		</trim>
		)
		values(
		<trim suffixOverrides=",">
			<if test="fileName!=null">
				#{fileName},
			</if>
			<if test="rowNumber!=null">
				#{rowNumber},
			</if>
			<if test="timeStamp!=null">
				#{timeStamp},
			</if>
			<if test="milliSecond!=null">
				#{milliSecond},
			</if>
			<if test="proceedingID!=null">
				#{proceedingID},
			</if>
			<if test="threadName!=null">
				#{threadName},
			</if>
			<if test="priority!=null">
				#{priority},
			</if>
			<if test="executeTime!=null">
				#{executeTime},
			</if>
			<if test="className!=null">
				#{className},
			</if>
			<if test="message!=null">
				#{message}
			</if>
		</trim>
		)
	</insert> -->

	<!-- <update id="updateLastMessage" parameterType="string">
		update
		<include refid="tableName" />
		set message=#{message} where id=(select a.id from (select max(id) as
		id from log)as a);
	</update> -->

	<!-- <select id="selectLogModelById" parameterType="int" resultType="logModel">
		select id,
		<include refid="insertField" />
		from
		<include refid="tableName" />
		where id=#{id}
	</select> -->

	<!-- <select id="selectLogModelsByDateRange" resultType="logModel">
		select id,
		<include refid="insertField" />
		from
		<include refid="tableName" />
		where timeStamp &gt;= #{fromTimeStamp} and timeStamp &lt;=
		#{toTimeStamp}
	</select> -->

	<!-- <select id="selectAllByIdDesc" resultType="logModel">
		select id,
		<include refid="insertField" />
		from
		<include refid="tableName" />
		order by id desc limit #{startRow},#{size}
	</select>

	<select id="selectAllCount" resultType="long">
		select count(id) from
		<include refid="tableName" />
	</select> -->

	<!-- <select id="selectResultCountByCondition" resultType="int">
		select count(id) from <include refid="tableName" />
		<trim prefix="where" prefixOverrides="or |and">
			<if test="ids != null">
				<foreach collection="ids" item="item" open="id in (" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			<if test="fileName != null and fileName != ''">
				${relatedType} fileName = #{fileName}
			</if>

			<if test="timeStamp_from != null or timeStamp_to != null">
				${relatedType} (
				<trim suffixOverrides="and">
					<if test="timeStamp_from != null">
						timeStamp &gt;= #{timeStamp_from} and
					</if>
					<if test="timeStamp_to != null">
						timeStamp &lt;= #{timeStamp_to}
					</if>
				</trim>
				)
			</if>

			<if test="priority != null and priority != ''">
				${relatedType} priority = #{priority}
			</if>
			<if test="priority != null and priority != ''">
				${relatedType} priority = #{priority}
			</if>
			<if test="threadName!=null">
				${relatedType} threadName like concat('%',#{threadName},'%')
			</if> 
			<if test="className!=null">
				${relatedType} className like concat('%',#{className},'%')
			</if> 
			<if test="message!=null"> 
				${relatedType} message like concat('%',#{message},'%')
			</if>
		</trim>
	</select>


	<select id="selectLogModelsByCondition" resultType="logModel">
		select id,<include refid="insertField" /> from <include refid="tableName"/>
		where id in 
			(select id from <include refid="tableName" />
			<trim prefix="where" prefixOverrides="or |and">
				<if test="ids != null">
					<foreach collection="ids" item="item" open="id in (" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				<if test="fileName != null and fileName != ''">
					${relatedType} fileName = #{fileName}
				</if>
	
				<if test="timeStamp_from != null or timeStamp_to != null">
					${relatedType} (
					<trim suffixOverrides="and">
						<if test="timeStamp_from != null">
							timeStamp &gt;= #{timeStamp_from} and
						</if>
						<if test="timeStamp_to != null">
							timeStamp &lt;= #{timeStamp_to}
						</if>
					</trim>
					)
				</if>
	
				<if test="priority != null and priority != ''">
					${relatedType} priority = #{priority}
				</if>
				<if test="threadName!=null">
					${relatedType} threadName like concat('%',#{threadName},'%')
				</if> 
				<if test="className!=null">
					${relatedType} className like concat('%',#{className},'%')
				</if> 
				<if test="message!=null"> 
					${relatedType} message like concat('%',#{message},'%')
				</if>
			</trim>
	
			</where>
			)
			<if test="size != 0">
				limit #{startRow},#{size}
			</if>
	</select> -->

	<select id="selectByIds" resultType="logModel">
		select id,<include refid="insertField" /> from <include refid="tableName"/>
		where
		<foreach collection="ids" item="item" open="id in (" close=")" separator=",">
			#{item}
		</foreach>
	</select>


	<select id="selectAllPriority" resultType="string">
		select priority from
		<include refid="tableName" />
		group by priority
	</select>

	<select id="selectCountByPriority" parameterType="string"
		resultType="int">
		select count(id) from
		<include refid="tableName" />
		where priority=#{priority}
	</select>

	<select id="selectAllThreadName" resultType="string">
		select threadName
		from log group by threadName
	</select>

	<select id="selectCountByThreadName" parameterType="string"
		resultType="int">
		select count(id) from
		<include refid="tableName" />
		where threadName=#{threadName}
	</select>



</mapper>